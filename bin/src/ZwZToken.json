{
    "contractName": "ZwZToken",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "enable",
                    "type": "bool"
                }
            ],
            "name": "AntibotEnabled",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "newWhiteList",
                    "type": "address[]"
                },
                {
                    "indexed": false,
                    "internalType": "address[]",
                    "name": "removedWhiteList",
                    "type": "address[]"
                }
            ],
            "name": "WhiteListUpdate",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "antiBotEnabled",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burn",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "burnFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "subtractedValue",
                    "type": "uint256"
                }
            ],
            "name": "decreaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "addedValue",
                    "type": "uint256"
                }
            ],
            "name": "increaseAllowance",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "maxSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address[]",
                    "name": "newWhiteList",
                    "type": "address[]"
                },
                {
                    "internalType": "address[]",
                    "name": "removedWhiteList",
                    "type": "address[]"
                }
            ],
            "name": "modifyWhiteList",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bool",
                    "name": "_enable",
                    "type": "bool"
                }
            ],
            "name": "setAntiBot",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "recipient",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "whiteList",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"enable\",\"type\":\"bool\"}],\"name\":\"AntibotEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"newWhiteList\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"removedWhiteList\",\"type\":\"address[]\"}],\"name\":\"WhiteListUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"antiBotEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"newWhiteList\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"removedWhiteList\",\"type\":\"address[]\"}],\"name\":\"modifyWhiteList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_enable\",\"type\":\"bool\"}],\"name\":\"setAntiBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whiteList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/hieunmce/workspace/zwz-tokenimic/src/ZwZToken.sol\":\"ZwZToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0xf98cb1651a90d20ef77d8c1dd10d5fce4954e747603e5672a8292bd4368120dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://76b539a8edd558b010d1ff3e462c5d4edd039b790b91f31a5bce18957655cc9f\",\"dweb:/ipfs/QmSdJehhx1SwCWLSFFgHQTmUY2YwDTBQjTVjkmhXhA1srb\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol\":{\"keccak256\":\"0x5f7388d6c413c6f1faece48438f21d296296140d8a421c62515613d1e84804ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28cd14a7bf75540b17a95d8d58fbbbbfaf776d615997d873397d3f459583c9c4\",\"dweb:/ipfs/QmQREJ53or1amn79THELJZBGAWx9M4e6ZVUXZiczCKksfw\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/src/AntiBot.sol\":{\"keccak256\":\"0x924895fdc5ebfab163ca87c1d3caa9f6f35fe50a21a6a51ecb8ce9de2330c589\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f276fe242cced7d7e85318a6eccde2ff40e8331f213048546bfe45fe0b055b3\",\"dweb:/ipfs/QmXutgqCJfuDhhaxYsJ396n8t3FvRZupSZo62RCH3LRCHG\"]},\"/Users/hieunmce/workspace/zwz-tokenimic/src/ZwZToken.sol\":{\"keccak256\":\"0xb092d480265ec147f5200cb4d13b08f4e554b404f07c31631adb795f8e9af802\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5e156bb49cb52ed96ff5892267c589cfdd539b7c18b15742afdfdb511c80fd\",\"dweb:/ipfs/QmWspAsPSFkDsC3hyZWMr5k7m5DS1MocBM6ZVUgCSiD28v\"]}},\"version\":1}",
    "bytecode": "60806040526007805460ff191660011790553480156200001e57600080fd5b506040518060400160405280600e81526020016d2d37b6b134b2902bb7b93632102d60911b815250604051806040016040528060038152602001622d3bad60e91b8152506b033b2e3c9fd0803ce800000033838381600390805190602001906200008a92919062000258565b508051620000a090600490602084019062000258565b505050620000b581836200011a60201b60201c565b50505050620000d3620000cd6200020260201b60201c565b62000206565b600160066000620000ec6005546001600160a01b031690565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905562000362565b6001600160a01b038216620001755760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001899190620002fe565b90915550506001600160a01b03821660009081526020819052604081208054839290620001b8908490620002fe565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620002669062000325565b90600052602060002090601f0160209004810192826200028a5760008555620002d5565b82601f10620002a557805160ff1916838001178555620002d5565b82800160010185558215620002d5579182015b82811115620002d5578251825591602001919060010190620002b8565b50620002e3929150620002e7565b5090565b5b80821115620002e35760008155600101620002e8565b600082198211156200032057634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200033a57607f821691505b602082108114156200035c57634e487b7160e01b600052602260045260246000fd5b50919050565b61113c80620003726000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a9059cbb1161007c578063a9059cbb14610289578063c2c7c03a1461029c578063d5abeb01146102af578063d8c6404b146102c2578063dd62ed3e146102cf578063f2fde38b1461030857600080fd5b8063715018a61461023857806379cc6790146102405780638da5cb5b1461025357806395d89b411461026e578063a457c2d71461027657600080fd5b8063313ce567116100ff578063313ce567146101b7578063372c12b1146101c657806339509351146101e957806342966c68146101fc57806370a082311461020f57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632adb5f4e146101a2575b600080fd5b61014461031b565b6040516101519190610fcb565b60405180910390f35b61016d610168366004610e81565b6103ad565b6040519015158152602001610151565b6002545b604051908152602001610151565b61016d61019d366004610e45565b6103c3565b6101b56101b0366004610eab565b610472565b005b60405160128152602001610151565b61016d6101d4366004610df0565b60066020526000908152604090205460ff1681565b61016d6101f7366004610e81565b6105c5565b6101b561020a366004610f39565b610601565b61018161021d366004610df0565b6001600160a01b031660009081526020819052604090205490565b6101b561060e565b6101b561024e366004610e81565b610644565b6005546040516001600160a01b039091168152602001610151565b6101446106ca565b61016d610284366004610e81565b6106d9565b61016d610297366004610e81565b610772565b6101b56102aa366004610f17565b61077f565b6101816b033b2e3c9fd0803ce800000081565b60075461016d9060ff1681565b6101816102dd366004610e12565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b5610316366004610df0565b6107f0565b60606003805461032a90611084565b80601f016020809104026020016040519081016040528092919081815260200182805461035690611084565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b5050505050905090565b60006103ba338484610888565b50600192915050565b60006103d08484846109ac565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561045a5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104678533858403610888565b506001949350505050565b6005546001600160a01b0316331461049c5760405162461bcd60e51b815260040161045190611020565b60005b8381101561050e576001600660008787858181106104bf576104bf6110f0565b90506020020160208101906104d49190610df0565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610506816110bf565b91505061049f565b5060005b8181101561058157600060066000858585818110610532576105326110f0565b90506020020160208101906105479190610df0565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610579816110bf565b915050610512565b507f9824340d355882c6f24a03cf203373acc1041a901e7908f36040d1463ccc3e91848484846040516105b79493929190610f99565b60405180910390a150505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103ba9185906105fc908690611055565b610888565b61060b3382610a19565b50565b6005546001600160a01b031633146106385760405162461bcd60e51b815260040161045190611020565b6106426000610b67565b565b600061065083336102dd565b9050818110156106ae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610451565b6106bb8333848403610888565b6106c58383610a19565b505050565b60606004805461032a90611084565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561075b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610451565b6107683385858403610888565b5060019392505050565b60006103ba3384846109ac565b6005546001600160a01b031633146107a95760405162461bcd60e51b815260040161045190611020565b6007805460ff19168215159081179091556040519081527f4b683e173dee68d952d619638abca9a2aca56c6369610067d042ccd583924b469060200160405180910390a150565b6005546001600160a01b0316331461081a5760405162461bcd60e51b815260040161045190611020565b6001600160a01b03811661087f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610451565b61060b81610b67565b6001600160a01b0383166108ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610451565b6001600160a01b03821661094b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610451565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831660009081526006602052604090205460ff1680156109d7575060075460ff16155b610a0e5760405162461bcd60e51b8152602060048201526008602482015267105b9d1a48109bdd60c21b6044820152606401610451565b6106c5838383610bb9565b6001600160a01b038216610a795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610451565b6001600160a01b03821660009081526020819052604090205481811015610aed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610451565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b1c90849061106d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316610c1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610451565b6001600160a01b038216610c7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610451565b6001600160a01b03831660009081526020819052604090205481811015610cf75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610451565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d2e908490611055565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d7a91815260200190565b60405180910390a350505050565b80356001600160a01b0381168114610d9f57600080fd5b919050565b60008083601f840112610db657600080fd5b50813567ffffffffffffffff811115610dce57600080fd5b6020830191508360208260051b8501011115610de957600080fd5b9250929050565b600060208284031215610e0257600080fd5b610e0b82610d88565b9392505050565b60008060408385031215610e2557600080fd5b610e2e83610d88565b9150610e3c60208401610d88565b90509250929050565b600080600060608486031215610e5a57600080fd5b610e6384610d88565b9250610e7160208501610d88565b9150604084013590509250925092565b60008060408385031215610e9457600080fd5b610e9d83610d88565b946020939093013593505050565b60008060008060408587031215610ec157600080fd5b843567ffffffffffffffff80821115610ed957600080fd5b610ee588838901610da4565b90965094506020870135915080821115610efe57600080fd5b50610f0b87828801610da4565b95989497509550505050565b600060208284031215610f2957600080fd5b81358015158114610e0b57600080fd5b600060208284031215610f4b57600080fd5b5035919050565b8183526000602080850194508260005b85811015610f8e576001600160a01b03610f7b83610d88565b1687529582019590820190600101610f62565b509495945050505050565b604081526000610fad604083018688610f52565b8281036020840152610fc0818587610f52565b979650505050505050565b600060208083528351808285015260005b81811015610ff857858101830151858201604001528201610fdc565b8181111561100a576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611068576110686110da565b500190565b60008282101561107f5761107f6110da565b500390565b600181811c9082168061109857607f821691505b602082108114156110b957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156110d3576110d36110da565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e8c115fa45e1cced7d19fcd15a09f54d048e6c15ec4abcef0ce6e050b22ac3b564736f6c63430008070033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a9059cbb1161007c578063a9059cbb14610289578063c2c7c03a1461029c578063d5abeb01146102af578063d8c6404b146102c2578063dd62ed3e146102cf578063f2fde38b1461030857600080fd5b8063715018a61461023857806379cc6790146102405780638da5cb5b1461025357806395d89b411461026e578063a457c2d71461027657600080fd5b8063313ce567116100ff578063313ce567146101b7578063372c12b1146101c657806339509351146101e957806342966c68146101fc57806370a082311461020f57600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632adb5f4e146101a2575b600080fd5b61014461031b565b6040516101519190610fcb565b60405180910390f35b61016d610168366004610e81565b6103ad565b6040519015158152602001610151565b6002545b604051908152602001610151565b61016d61019d366004610e45565b6103c3565b6101b56101b0366004610eab565b610472565b005b60405160128152602001610151565b61016d6101d4366004610df0565b60066020526000908152604090205460ff1681565b61016d6101f7366004610e81565b6105c5565b6101b561020a366004610f39565b610601565b61018161021d366004610df0565b6001600160a01b031660009081526020819052604090205490565b6101b561060e565b6101b561024e366004610e81565b610644565b6005546040516001600160a01b039091168152602001610151565b6101446106ca565b61016d610284366004610e81565b6106d9565b61016d610297366004610e81565b610772565b6101b56102aa366004610f17565b61077f565b6101816b033b2e3c9fd0803ce800000081565b60075461016d9060ff1681565b6101816102dd366004610e12565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6101b5610316366004610df0565b6107f0565b60606003805461032a90611084565b80601f016020809104026020016040519081016040528092919081815260200182805461035690611084565b80156103a35780601f10610378576101008083540402835291602001916103a3565b820191906000526020600020905b81548152906001019060200180831161038657829003601f168201915b5050505050905090565b60006103ba338484610888565b50600192915050565b60006103d08484846109ac565b6001600160a01b03841660009081526001602090815260408083203384529091529020548281101561045a5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104678533858403610888565b506001949350505050565b6005546001600160a01b0316331461049c5760405162461bcd60e51b815260040161045190611020565b60005b8381101561050e576001600660008787858181106104bf576104bf6110f0565b90506020020160208101906104d49190610df0565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610506816110bf565b91505061049f565b5060005b8181101561058157600060066000858585818110610532576105326110f0565b90506020020160208101906105479190610df0565b6001600160a01b031681526020810191909152604001600020805460ff191691151591909117905580610579816110bf565b915050610512565b507f9824340d355882c6f24a03cf203373acc1041a901e7908f36040d1463ccc3e91848484846040516105b79493929190610f99565b60405180910390a150505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103ba9185906105fc908690611055565b610888565b61060b3382610a19565b50565b6005546001600160a01b031633146106385760405162461bcd60e51b815260040161045190611020565b6106426000610b67565b565b600061065083336102dd565b9050818110156106ae5760405162461bcd60e51b8152602060048201526024808201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604482015263616e636560e01b6064820152608401610451565b6106bb8333848403610888565b6106c58383610a19565b505050565b60606004805461032a90611084565b3360009081526001602090815260408083206001600160a01b03861684529091528120548281101561075b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610451565b6107683385858403610888565b5060019392505050565b60006103ba3384846109ac565b6005546001600160a01b031633146107a95760405162461bcd60e51b815260040161045190611020565b6007805460ff19168215159081179091556040519081527f4b683e173dee68d952d619638abca9a2aca56c6369610067d042ccd583924b469060200160405180910390a150565b6005546001600160a01b0316331461081a5760405162461bcd60e51b815260040161045190611020565b6001600160a01b03811661087f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610451565b61060b81610b67565b6001600160a01b0383166108ea5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610451565b6001600160a01b03821661094b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610451565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b03831660009081526006602052604090205460ff1680156109d7575060075460ff16155b610a0e5760405162461bcd60e51b8152602060048201526008602482015267105b9d1a48109bdd60c21b6044820152606401610451565b6106c5838383610bb9565b6001600160a01b038216610a795760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610451565b6001600160a01b03821660009081526020819052604090205481811015610aed5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610451565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610b1c90849061106d565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a3505050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038316610c1d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610451565b6001600160a01b038216610c7f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610451565b6001600160a01b03831660009081526020819052604090205481811015610cf75760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610451565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610d2e908490611055565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d7a91815260200190565b60405180910390a350505050565b80356001600160a01b0381168114610d9f57600080fd5b919050565b60008083601f840112610db657600080fd5b50813567ffffffffffffffff811115610dce57600080fd5b6020830191508360208260051b8501011115610de957600080fd5b9250929050565b600060208284031215610e0257600080fd5b610e0b82610d88565b9392505050565b60008060408385031215610e2557600080fd5b610e2e83610d88565b9150610e3c60208401610d88565b90509250929050565b600080600060608486031215610e5a57600080fd5b610e6384610d88565b9250610e7160208501610d88565b9150604084013590509250925092565b60008060408385031215610e9457600080fd5b610e9d83610d88565b946020939093013593505050565b60008060008060408587031215610ec157600080fd5b843567ffffffffffffffff80821115610ed957600080fd5b610ee588838901610da4565b90965094506020870135915080821115610efe57600080fd5b50610f0b87828801610da4565b95989497509550505050565b600060208284031215610f2957600080fd5b81358015158114610e0b57600080fd5b600060208284031215610f4b57600080fd5b5035919050565b8183526000602080850194508260005b85811015610f8e576001600160a01b03610f7b83610d88565b1687529582019590820190600101610f62565b509495945050505050565b604081526000610fad604083018688610f52565b8281036020840152610fc0818587610f52565b979650505050505050565b600060208083528351808285015260005b81811015610ff857858101830151858201604001528201610fdc565b8181111561100a576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115611068576110686110da565b500190565b60008282101561107f5761107f6110da565b500390565b600181811c9082168061109857607f821691505b602082108114156110b957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156110d3576110d36110da565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea2646970667358221220e8c115fa45e1cced7d19fcd15a09f54d048e6c15ec4abcef0ce6e050b22ac3b564736f6c63430008070033",
    "sourceMap": "327:544:9:-:0;;;254:33:8;;;-1:-1:-1;;254:33:8;283:4;254:33;;;483:127:9;;;;;;;;;;648:194:5;;;;;;;;;;;;;-1:-1:-1;;;648:194:5;;;;;;;;;;;;;;;;-1:-1:-1;;;648:194:5;;;455:21:9;556:10;784:4:5;790:6;1980:5:1;1972;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1995:17:1;;;;:7;;:17;;;;;:::i;:::-;;1906:113;;808:27:5::1;814:5;821:13;808:5;;;:27;;:::i;:::-;648:194:::0;;;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;599:4:9::1;578:9;:18;588:7;1045:6:0::0;;-1:-1:-1;;;;;1045:6:0;;973:85;588:7:9::1;-1:-1:-1::0;;;;;578:18:9::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;578:18:9;:25;;-1:-1:-1;;578:25:9::1;::::0;::::1;;::::0;;;::::1;::::0;;327:544;;8254:389:1;-1:-1:-1;;;;;8337:21:1;;8329:65;;;;-1:-1:-1;;;8329:65:1;;216:2:10;8329:65:1;;;198:21:10;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8329:65:1;;;;;;;;8481:6;8465:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8497:18:1;;:9;:18;;;;;;;;;;:28;;8519:6;;8497:9;:28;;8519:6;;8497:28;:::i;:::-;;;;-1:-1:-1;;8540:37:1;;520:25:10;;;-1:-1:-1;;;;;8540:37:1;;;8557:1;;8540:37;;508:2:10;493:18;8540:37:1;;;;;;;8254:389;;:::o;587:96:6:-;666:10;;587:96::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;327:544:9:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;327:544:9;;;-1:-1:-1;327:544:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:225:10;596:3;627:1;623:6;620:1;617:13;614:136;;;672:10;667:3;663:20;660:1;653:31;707:4;704:1;697:15;735:4;732:1;725:15;614:136;-1:-1:-1;766:9:10;;556:225::o;786:380::-;865:1;861:12;;;;908;;;929:61;;983:4;975:6;971:17;961:27;;929:61;1036:2;1028:6;1025:14;1005:18;1002:38;999:161;;;1082:10;1077:3;1073:20;1070:1;1063:31;1117:4;1114:1;1107:15;1145:4;1142:1;1135:15;999:161;;786:380;;;:::o;:::-;327:544:9;;;;;;",
    "deployedSourceMap": "327:544:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4181:166;;;;;;:::i;:::-;;:::i;:::-;;;4202:14:10;;4195:22;4177:41;;4165:2;4150:18;4181:166:1;4037:187:10;3172:106:1;3259:12;;3172:106;;;10131:25:10;;;10119:2;10104:18;3172:106:1;9985:177:10;4814:478:1;;;;;;:::i;:::-;;:::i;413:451:8:-;;;;;;:::i;:::-;;:::i;:::-;;3021:91:1;;;3103:2;10309:36:10;;10297:2;10282:18;3021:91:1;10167:184:10;207:41:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5687:212:1;;;;;;:::i;:::-;;:::i;487:89:3:-;;;;;;:::i;:::-;;:::i;3336:125:1:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3436:18:1;3410:7;3436:18;;;;;;;;;;;;3336:125;1605:92:0;;;:::i;882:361:3:-;;;;;;:::i;:::-;;:::i;973:85:0:-;1045:6;;973:85;;-1:-1:-1;;;;;1045:6:0;;;3451:51:10;;3439:2;3424:18;973:85:0;3305:203:10;2295:102:1;;;:::i;6386:405::-;;;;;;:::i;:::-;;:::i;3664:172::-;;;;;;:::i;:::-;;:::i;870:132:8:-;;;;;;:::i;:::-;;:::i;419:57:9:-;;455:21;419:57;;254:33:8;;;;;;;;;3894:149:1;;;;;;:::i;:::-;-1:-1:-1;;;;;4009:18:1;;;3983:7;4009:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3894:149;1846:189:0;;;;;;:::i;:::-;;:::i;2084:98:1:-;2138:13;2170:5;2163:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2084:98;:::o;4181:166::-;4264:4;4280:39;666:10:6;4303:7:1;4312:6;4280:8;:39::i;:::-;-1:-1:-1;4336:4:1;4181:166;;;;:::o;4814:478::-;4950:4;4966:36;4976:6;4984:9;4995:6;4966:9;:36::i;:::-;-1:-1:-1;;;;;5040:19:1;;5013:24;5040:19;;;:11;:19;;;;;;;;666:10:6;5040:33:1;;;;;;;;5091:26;;;;5083:79;;;;-1:-1:-1;;;5083:79:1;;7393:2:10;5083:79:1;;;7375:21:10;7432:2;7412:18;;;7405:30;7471:34;7451:18;;;7444:62;-1:-1:-1;;;7522:18:10;;;7515:38;7570:19;;5083:79:1;;;;;;;;;5196:57;5205:6;666:10:6;5246:6:1;5227:16;:25;5196:8;:57::i;:::-;-1:-1:-1;5281:4:1;;4814:478;-1:-1:-1;;;;4814:478:1:o;413:451:8:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;542:13:8::1;537:120;557:27:::0;;::::1;537:120;;;642:4;609:9;:30;619:12;;632:5;619:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;609:30:8::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;609:30:8;:37;;-1:-1:-1;;609:37:8::1;::::0;::::1;;::::0;;;::::1;::::0;;586:7;::::1;::::0;::::1;:::i;:::-;;;;537:120;;;;671:13;666:129;686:31:::0;;::::1;666:129;;;779:5;742:9;:34;752:16;;769:5;752:23;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;742:34:8::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;742:34:8;:42;;-1:-1:-1;;742:42:8::1;::::0;::::1;;::::0;;;::::1;::::0;;719:7;::::1;::::0;::::1;:::i;:::-;;;;666:129;;;;810:47;826:12;;840:16;;810:47;;;;;;;;;:::i;:::-;;;;;;;;413:451:::0;;;;:::o;5687:212:1:-;666:10:6;5775:4:1;5823:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5823:34:1;;;;;;;;;;5775:4;;5791:80;;5814:7;;5823:47;;5860:10;;5823:47;:::i;:::-;5791:8;:80::i;487:89:3:-;542:27;666:10:6;562:6:3;542:5;:27::i;:::-;487:89;:::o;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;882:361:3:-;958:24;985:32;995:7;666:10:6;3894:149:1;:::i;985:32:3:-;958:59;;1055:6;1035:16;:26;;1027:75;;;;-1:-1:-1;;;1027:75:3;;8163:2:10;1027:75:3;;;8145:21:10;8202:2;8182:18;;;8175:30;8241:34;8221:18;;;8214:62;-1:-1:-1;;;8292:18:10;;;8285:34;8336:19;;1027:75:3;7961:400:10;1027:75:3;1136:58;1145:7;666:10:6;1187:6:3;1168:16;:25;1136:8;:58::i;:::-;1214:22;1220:7;1229:6;1214:5;:22::i;:::-;948:295;882:361;;:::o;2295:102:1:-;2351:13;2383:7;2376:14;;;;;:::i;6386:405::-;666:10:6;6479:4:1;6522:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6522:34:1;;;;;;;;;;6574:35;;;;6566:85;;;;-1:-1:-1;;;6566:85:1;;9781:2:10;6566:85:1;;;9763:21:10;9820:2;9800:18;;;9793:30;9859:34;9839:18;;;9832:62;-1:-1:-1;;;9910:18:10;;;9903:35;9955:19;;6566:85:1;9579:401:10;6566:85:1;6685:67;666:10:6;6708:7:1;6736:15;6717:16;:34;6685:8;:67::i;:::-;-1:-1:-1;6780:4:1;;6386:405;-1:-1:-1;;;6386:405:1:o;3664:172::-;3750:4;3766:42;666:10:6;3790:9:1;3801:6;3766:9;:42::i;870:132:8:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;933:14:8::1;:24:::0;;-1:-1:-1;;933:24:8::1;::::0;::::1;;::::0;;::::1;::::0;;;972:23:::1;::::0;4177:41:10;;;972:23:8::1;::::0;4165:2:10;4150:18;972:23:8::1;;;;;;;870:132:::0;:::o;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:6;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;5840:2:10;1926:73:0::1;::::0;::::1;5822:21:10::0;5879:2;5859:18;;;5852:30;5918:34;5898:18;;;5891:62;-1:-1:-1;;;5969:18:10;;;5962:36;6015:19;;1926:73:0::1;5638:402:10::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;9962:370:1:-:0;-1:-1:-1;;;;;10093:19:1;;10085:68;;;;-1:-1:-1;;;10085:68:1;;9376:2:10;10085:68:1;;;9358:21:10;9415:2;9395:18;;;9388:30;9454:34;9434:18;;;9427:62;-1:-1:-1;;;9505:18:10;;;9498:34;9549:19;;10085:68:1;9174:400:10;10085:68:1;-1:-1:-1;;;;;10171:21:1;;10163:68;;;;-1:-1:-1;;;10163:68:1;;6247:2:10;10163:68:1;;;6229:21:10;6286:2;6266:18;;;6259:30;6325:34;6305:18;;;6298:62;-1:-1:-1;;;6376:18:10;;;6369:32;6418:19;;10163:68:1;6045:398:10;10163:68:1;-1:-1:-1;;;;;10242:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10293:32;;10131:25:10;;;10293:32:1;;10104:18:10;10293:32:1;;;;;;;9962:370;;;:::o;616:253:9:-;-1:-1:-1;;;;;760:17:9;;;;;;:9;:17;;;;;;;;:36;;;;-1:-1:-1;782:14:9;;;;781:15;760:36;752:57;;;;-1:-1:-1;;;752:57:9;;7057:2:10;752:57:9;;;7039:21:10;7096:1;7076:18;;;7069:29;-1:-1:-1;;;7114:18:10;;;7107:38;7162:18;;752:57:9;6855:331:10;752:57:9;820:42;836:6;844:9;855:6;820:15;:42::i;8963:576:1:-;-1:-1:-1;;;;;9046:21:1;;9038:67;;;;-1:-1:-1;;;9038:67:1;;8568:2:10;9038:67:1;;;8550:21:10;8607:2;8587:18;;;8580:30;8646:34;8626:18;;;8619:62;-1:-1:-1;;;8697:18:10;;;8690:31;8738:19;;9038:67:1;8366:397:10;9038:67:1;-1:-1:-1;;;;;9201:18:1;;9176:22;9201:18;;;;;;;;;;;9237:24;;;;9229:71;;;;-1:-1:-1;;;9229:71:1;;5437:2:10;9229:71:1;;;5419:21:10;5476:2;5456:18;;;5449:30;5515:34;5495:18;;;5488:62;-1:-1:-1;;;5566:18:10;;;5559:32;5608:19;;9229:71:1;5235:398:10;9229:71:1;-1:-1:-1;;;;;9334:18:1;;:9;:18;;;;;;;;;;9355:23;;;9334:44;;9398:12;:22;;9372:6;;9334:9;9398:22;;9372:6;;9398:22;:::i;:::-;;;;-1:-1:-1;;9436:37:1;;10131:25:10;;;9462:1:1;;-1:-1:-1;;;;;9436:37:1;;;;;10119:2:10;10104:18;9436:37:1;;;;;;;948:295:3;882:361;;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;7265:713:1:-;-1:-1:-1;;;;;7400:20:1;;7392:70;;;;-1:-1:-1;;;7392:70:1;;8970:2:10;7392:70:1;;;8952:21:10;9009:2;8989:18;;;8982:30;9048:34;9028:18;;;9021:62;-1:-1:-1;;;9099:18:10;;;9092:35;9144:19;;7392:70:1;8768:401:10;7392:70:1;-1:-1:-1;;;;;7480:23:1;;7472:71;;;;-1:-1:-1;;;7472:71:1;;5033:2:10;7472:71:1;;;5015:21:10;5072:2;5052:18;;;5045:30;5111:34;5091:18;;;5084:62;-1:-1:-1;;;5162:18:10;;;5155:33;5205:19;;7472:71:1;4831:399:10;7472:71:1;-1:-1:-1;;;;;7636:17:1;;7612:21;7636:17;;;;;;;;;;;7671:23;;;;7663:74;;;;-1:-1:-1;;;7663:74:1;;6650:2:10;7663:74:1;;;6632:21:10;6689:2;6669:18;;;6662:30;6728:34;6708:18;;;6701:62;-1:-1:-1;;;6779:18:10;;;6772:36;6825:19;;7663:74:1;6448:402:10;7663:74:1;-1:-1:-1;;;;;7771:17:1;;;:9;:17;;;;;;;;;;;7791:22;;;7771:42;;7833:20;;;;;;;;:30;;7807:6;;7771:9;7833:30;;7807:6;;7833:30;:::i;:::-;;;;;;;;7896:9;-1:-1:-1;;;;;7879:35:1;7888:6;-1:-1:-1;;;;;7879:35:1;;7907:6;7879:35;;;;10131:25:10;;10119:2;10104:18;;9985:177;7879:35:1;;;;;;;;7382:596;7265:713;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:367::-;255:8;265:6;319:3;312:4;304:6;300:17;296:27;286:55;;337:1;334;327:12;286:55;-1:-1:-1;360:20:10;;403:18;392:30;;389:50;;;435:1;432;425:12;389:50;472:4;464:6;460:17;448:29;;532:3;525:4;515:6;512:1;508:14;500:6;496:27;492:38;489:47;486:67;;;549:1;546;539:12;486:67;192:367;;;;;:::o;564:186::-;623:6;676:2;664:9;655:7;651:23;647:32;644:52;;;692:1;689;682:12;644:52;715:29;734:9;715:29;:::i;:::-;705:39;564:186;-1:-1:-1;;;564:186:10:o;755:260::-;823:6;831;884:2;872:9;863:7;859:23;855:32;852:52;;;900:1;897;890:12;852:52;923:29;942:9;923:29;:::i;:::-;913:39;;971:38;1005:2;994:9;990:18;971:38;:::i;:::-;961:48;;755:260;;;;;:::o;1020:328::-;1097:6;1105;1113;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1205:29;1224:9;1205:29;:::i;:::-;1195:39;;1253:38;1287:2;1276:9;1272:18;1253:38;:::i;:::-;1243:48;;1338:2;1327:9;1323:18;1310:32;1300:42;;1020:328;;;;;:::o;1353:254::-;1421:6;1429;1482:2;1470:9;1461:7;1457:23;1453:32;1450:52;;;1498:1;1495;1488:12;1450:52;1521:29;1540:9;1521:29;:::i;:::-;1511:39;1597:2;1582:18;;;;1569:32;;-1:-1:-1;;;1353:254:10:o;1612:773::-;1734:6;1742;1750;1758;1811:2;1799:9;1790:7;1786:23;1782:32;1779:52;;;1827:1;1824;1817:12;1779:52;1867:9;1854:23;1896:18;1937:2;1929:6;1926:14;1923:34;;;1953:1;1950;1943:12;1923:34;1992:70;2054:7;2045:6;2034:9;2030:22;1992:70;:::i;:::-;2081:8;;-1:-1:-1;1966:96:10;-1:-1:-1;2169:2:10;2154:18;;2141:32;;-1:-1:-1;2185:16:10;;;2182:36;;;2214:1;2211;2204:12;2182:36;;2253:72;2317:7;2306:8;2295:9;2291:24;2253:72;:::i;:::-;1612:773;;;;-1:-1:-1;2344:8:10;-1:-1:-1;;;;1612:773:10:o;2390:273::-;2446:6;2499:2;2487:9;2478:7;2474:23;2470:32;2467:52;;;2515:1;2512;2505:12;2467:52;2554:9;2541:23;2607:5;2600:13;2593:21;2586:5;2583:32;2573:60;;2629:1;2626;2619:12;2668:180;2727:6;2780:2;2768:9;2759:7;2755:23;2751:32;2748:52;;;2796:1;2793;2786:12;2748:52;-1:-1:-1;2819:23:10;;2668:180;-1:-1:-1;2668:180:10:o;2853:447::-;2953:6;2948:3;2941:19;2923:3;2979:4;3008:2;3003:3;2999:12;2992:19;;3034:5;3057:1;3067:208;3081:6;3078:1;3075:13;3067:208;;;-1:-1:-1;;;;;3146:26:10;3165:6;3146:26;:::i;:::-;3142:52;3130:65;;3215:12;;;;3250:15;;;;3103:1;3096:9;3067:208;;;-1:-1:-1;3291:3:10;;2853:447;-1:-1:-1;;;;;2853:447:10:o;3513:519::-;3790:2;3779:9;3772:21;3753:4;3816:73;3885:2;3874:9;3870:18;3862:6;3854;3816:73;:::i;:::-;3937:9;3929:6;3925:22;3920:2;3909:9;3905:18;3898:50;3965:61;4019:6;4011;4003;3965:61;:::i;:::-;3957:69;3513:519;-1:-1:-1;;;;;;;3513:519:10:o;4229:597::-;4341:4;4370:2;4399;4388:9;4381:21;4431:6;4425:13;4474:6;4469:2;4458:9;4454:18;4447:34;4499:1;4509:140;4523:6;4520:1;4517:13;4509:140;;;4618:14;;;4614:23;;4608:30;4584:17;;;4603:2;4580:26;4573:66;4538:10;;4509:140;;;4667:6;4664:1;4661:13;4658:91;;;4737:1;4732:2;4723:6;4712:9;4708:22;4704:31;4697:42;4658:91;-1:-1:-1;4810:2:10;4789:15;-1:-1:-1;;4785:29:10;4770:45;;;;4817:2;4766:54;;4229:597;-1:-1:-1;;;4229:597:10:o;7600:356::-;7802:2;7784:21;;;7821:18;;;7814:30;7880:34;7875:2;7860:18;;7853:62;7947:2;7932:18;;7600:356::o;10356:128::-;10396:3;10427:1;10423:6;10420:1;10417:13;10414:39;;;10433:18;;:::i;:::-;-1:-1:-1;10469:9:10;;10356:128::o;10489:125::-;10529:4;10557:1;10554;10551:8;10548:34;;;10562:18;;:::i;:::-;-1:-1:-1;10599:9:10;;10489:125::o;10619:380::-;10698:1;10694:12;;;;10741;;;10762:61;;10816:4;10808:6;10804:17;10794:27;;10762:61;10869:2;10861:6;10858:14;10838:18;10835:38;10832:161;;;10915:10;10910:3;10906:20;10903:1;10896:31;10950:4;10947:1;10940:15;10978:4;10975:1;10968:15;10832:161;;10619:380;;;:::o;11004:135::-;11043:3;-1:-1:-1;;11064:17:10;;11061:43;;;11084:18;;:::i;:::-;-1:-1:-1;11131:1:10;11120:13;;11004:135::o;11144:127::-;11205:10;11200:3;11196:20;11193:1;11186:31;11236:4;11233:1;11226:15;11260:4;11257:1;11250:15;11276:127;11337:10;11332:3;11328:20;11325:1;11318:31;11368:4;11365:1;11358:15;11392:4;11389:1;11382:15",
    "sourcePath": "/Users/hieunmce/workspace/zwz-tokenimic/src/ZwZToken.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.7+commit.e28d00a7"
    },
    "ast": {
        "absolutePath": "/Users/hieunmce/workspace/zwz-tokenimic/src/ZwZToken.sol",
        "exportedSymbols": {
            "AntiBot": [
                1275
            ],
            "Context": [
                865
            ],
            "ERC20": [
                649
            ],
            "ERC20Burnable": [
                789
            ],
            "ERC20PresetFixedSupply": [
                843
            ],
            "IERC20": [
                727
            ],
            "IERC20Metadata": [
                814
            ],
            "Ownable": [
                103
            ],
            "SafeMath": [
                1177
            ],
            "ZwZToken": [
                1346
            ]
        },
        "id": 1347,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1277,
                "literals": [
                    "solidity",
                    "0.8",
                    ".7"
                ],
                "nodeType": "PragmaDirective",
                "src": "33:22:9"
            },
            {
                "absolutePath": "/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol",
                "file": "/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/token/ERC20/presets/ERC20PresetFixedSupply.sol",
                "id": 1278,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 1347,
                "sourceUnit": 844,
                "src": "57:133:9",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
                "file": "/Users/hieunmce/workspace/zwz-tokenimic/node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
                "id": 1279,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 1347,
                "sourceUnit": 1178,
                "src": "191:110:9",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/hieunmce/workspace/zwz-tokenimic/src/AntiBot.sol",
                "file": "./AntiBot.sol",
                "id": 1280,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 1347,
                "sourceUnit": 1276,
                "src": "302:23:9",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 1281,
                            "name": "ERC20PresetFixedSupply",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 843,
                            "src": "348:22:9"
                        },
                        "id": 1282,
                        "nodeType": "InheritanceSpecifier",
                        "src": "348:22:9"
                    },
                    {
                        "baseName": {
                            "id": 1283,
                            "name": "AntiBot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1275,
                            "src": "372:7:9"
                        },
                        "id": 1284,
                        "nodeType": "InheritanceSpecifier",
                        "src": "372:7:9"
                    }
                ],
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 1346,
                "linearizedBaseContracts": [
                    1346,
                    1275,
                    103,
                    843,
                    789,
                    649,
                    814,
                    727,
                    865
                ],
                "name": "ZwZToken",
                "nameLocation": "336:8:9",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "id": 1287,
                        "libraryName": {
                            "id": 1285,
                            "name": "SafeMath",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1177,
                            "src": "392:8:9"
                        },
                        "nodeType": "UsingForDirective",
                        "src": "386:27:9",
                        "typeName": {
                            "id": 1286,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "405:7:9",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        }
                    },
                    {
                        "constant": true,
                        "functionSelector": "d5abeb01",
                        "id": 1298,
                        "mutability": "constant",
                        "name": "maxSupply",
                        "nameLocation": "443:9:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "419:57:9",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 1288,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "419:7:9",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000000000"
                            },
                            "id": 1297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                                "commonType": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                },
                                "id": 1293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                    "hexValue": "31303030",
                                    "id": 1289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "455:4:9",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000_by_1",
                                        "typeString": "int_const 1000"
                                    },
                                    "value": "1000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                    "commonType": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                    },
                                    "id": 1292,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 1290,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "462:2:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                        "hexValue": "36",
                                        "id": 1291,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "466:1:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_rational_6_by_1",
                                            "typeString": "int_const 6"
                                        },
                                        "value": "6"
                                    },
                                    "src": "462:5:9",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1000000_by_1",
                                        "typeString": "int_const 1000000"
                                    }
                                },
                                "src": "455:12:9",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000_by_1",
                                    "typeString": "int_const 1000000000"
                                }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                                "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                },
                                "id": 1296,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 1294,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "470:2:9",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 1295,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "474:2:9",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                },
                                "src": "470:6:9",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                }
                            },
                            "src": "455:21:9",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000000000000"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1315,
                            "nodeType": "Block",
                            "src": "568:42:9",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 1313,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 1308,
                                                "name": "whiteList",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1186,
                                                "src": "578:9:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                    "typeString": "mapping(address => bool)"
                                                }
                                            },
                                            "id": 1311,
                                            "indexExpression": {
                                                "arguments": [],
                                                "expression": {
                                                    "argumentTypes": [],
                                                    "id": 1309,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 32,
                                                    "src": "588:5:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                        "typeString": "function () view returns (address)"
                                                    }
                                                },
                                                "id": 1310,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "functionCall",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "588:7:9",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "578:18:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "74727565",
                                            "id": 1312,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "bool",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "599:4:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bool",
                                                "typeString": "bool"
                                            },
                                            "value": "true"
                                        },
                                        "src": "578:25:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                        }
                                    },
                                    "id": 1314,
                                    "nodeType": "ExpressionStatement",
                                    "src": "578:25:9"
                                }
                            ]
                        },
                        "id": 1316,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "5a6f6d62696520576f726c64205a",
                                        "id": 1301,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "520:16:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_4b293165e2a4f12f7d703052cf95241fb523c100b9acfb47de2d31251d93ad7d",
                                            "typeString": "literal_string \"Zombie World Z\""
                                        },
                                        "value": "Zombie World Z"
                                    },
                                    {
                                        "hexValue": "5a775a",
                                        "id": 1302,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "538:5:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_e1750d6d1349c1ea1f52a4ab2daa32483cb40a6baf5d50336a478fb343a6d4ad",
                                            "typeString": "literal_string \"ZwZ\""
                                        },
                                        "value": "ZwZ"
                                    },
                                    {
                                        "id": 1303,
                                        "name": "maxSupply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1298,
                                        "src": "545:9:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    {
                                        "expression": {
                                            "id": 1304,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4294967281,
                                            "src": "556:3:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_magic_message",
                                                "typeString": "msg"
                                            }
                                        },
                                        "id": 1305,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "sender",
                                        "nodeType": "MemberAccess",
                                        "src": "556:10:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 1306,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 1300,
                                    "name": "ERC20PresetFixedSupply",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 843,
                                    "src": "497:22:9"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "497:70:9"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1299,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "494:2:9"
                        },
                        "returnParameters": {
                            "id": 1307,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "568:0:9"
                        },
                        "scope": 1346,
                        "src": "483:127:9",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            453
                        ],
                        "body": {
                            "id": 1344,
                            "nodeType": "Block",
                            "src": "742:127:9",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                "id": 1332,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "baseExpression": {
                                                        "id": 1327,
                                                        "name": "whiteList",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1186,
                                                        "src": "760:9:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                                            "typeString": "mapping(address => bool)"
                                                        }
                                                    },
                                                    "id": 1329,
                                                    "indexExpression": {
                                                        "id": 1328,
                                                        "name": "sender",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1318,
                                                        "src": "770:6:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    },
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "IndexAccess",
                                                    "src": "760:17:9",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "&&",
                                                "rightExpression": {
                                                    "id": 1331,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "nodeType": "UnaryOperation",
                                                    "operator": "!",
                                                    "prefix": true,
                                                    "src": "781:15:9",
                                                    "subExpression": {
                                                        "id": 1330,
                                                        "name": "antiBotEnabled",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1189,
                                                        "src": "782:14:9",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_bool",
                                                            "typeString": "bool"
                                                        }
                                                    },
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bool",
                                                        "typeString": "bool"
                                                    }
                                                },
                                                "src": "760:36:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "416e746920426f74",
                                                "id": 1333,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "798:10:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_415376d8ae6ff5326add6a74c11b190eaa5e4fd710769a7f75c0bc57debeaf52",
                                                    "typeString": "literal_string \"Anti Bot\""
                                                },
                                                "value": "Anti Bot"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_415376d8ae6ff5326add6a74c11b190eaa5e4fd710769a7f75c0bc57debeaf52",
                                                    "typeString": "literal_string \"Anti Bot\""
                                                }
                                            ],
                                            "id": 1326,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "752:7:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 1334,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "752:57:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1335,
                                    "nodeType": "ExpressionStatement",
                                    "src": "752:57:9"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 1339,
                                                "name": "sender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1318,
                                                "src": "836:6:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1340,
                                                "name": "recipient",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1320,
                                                "src": "844:9:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1341,
                                                "name": "amount",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1322,
                                                "src": "855:6:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "id": 1336,
                                                "name": "super",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967271,
                                                "src": "820:5:9",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_super$_ZwZToken_$1346_$",
                                                    "typeString": "type(contract super ZwZToken)"
                                                }
                                            },
                                            "id": 1338,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "_transfer",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 453,
                                            "src": "820:15:9",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 1342,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "820:42:9",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1343,
                                    "nodeType": "ExpressionStatement",
                                    "src": "820:42:9"
                                }
                            ]
                        },
                        "id": 1345,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_transfer",
                        "nameLocation": "625:9:9",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 1324,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "733:8:9"
                        },
                        "parameters": {
                            "id": 1323,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1318,
                                    "mutability": "mutable",
                                    "name": "sender",
                                    "nameLocation": "652:6:9",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1345,
                                    "src": "644:14:9",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1317,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "644:7:9",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1320,
                                    "mutability": "mutable",
                                    "name": "recipient",
                                    "nameLocation": "676:9:9",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1345,
                                    "src": "668:17:9",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1319,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "668:7:9",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1322,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nameLocation": "703:6:9",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1345,
                                    "src": "695:14:9",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1321,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "695:7:9",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "634:81:9"
                        },
                        "returnParameters": {
                            "id": 1325,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "742:0:9"
                        },
                        "scope": 1346,
                        "src": "616:253:9",
                        "stateMutability": "nonpayable",
                        "virtual": true,
                        "visibility": "internal"
                    }
                ],
                "scope": 1347,
                "src": "327:544:9",
                "usedErrors": []
            }
        ],
        "src": "33:839:9"
    },
    "functionHashes": {
        "allowance(address,address)": "dd62ed3e",
        "antiBotEnabled()": "d8c6404b",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "burn(uint256)": "42966c68",
        "burnFrom(address,uint256)": "79cc6790",
        "decimals()": "313ce567",
        "decreaseAllowance(address,uint256)": "a457c2d7",
        "increaseAllowance(address,uint256)": "39509351",
        "maxSupply()": "d5abeb01",
        "modifyWhiteList(address[],address[])": "2adb5f4e",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "renounceOwnership()": "715018a6",
        "setAntiBot(bool)": "c2c7c03a",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "whiteList(address)": "372c12b1"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "882400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "allowance(address,address)": "infinite",
            "antiBotEnabled()": "2398",
            "approve(address,uint256)": "24642",
            "balanceOf(address)": "2651",
            "burn(uint256)": "50938",
            "burnFrom(address,uint256)": "77539",
            "decimals()": "200",
            "decreaseAllowance(address,uint256)": "26999",
            "increaseAllowance(address,uint256)": "27001",
            "maxSupply()": "261",
            "modifyWhiteList(address[],address[])": "infinite",
            "name()": "infinite",
            "owner()": "2368",
            "renounceOwnership()": "28140",
            "setAntiBot(bool)": "27737",
            "symbol()": "infinite",
            "totalSupply()": "2349",
            "transfer(address,uint256)": "55570",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "28444",
            "whiteList(address)": "2576"
        },
        "internal": {
            "_transfer(address,address,uint256)": "infinite"
        }
    }
}